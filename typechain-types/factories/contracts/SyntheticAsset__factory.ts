/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SyntheticAsset,
  SyntheticAssetInterface,
} from "../../contracts/SyntheticAsset";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "profitLoss",
        type: "int256",
      },
    ],
    name: "ClosePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "additionalSize",
        type: "uint256",
      },
    ],
    name: "IncreasePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "positionSize",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    name: "OpenPosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reduceSize",
        type: "uint256",
      },
    ],
    name: "ReducePosition",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "SetSyntheticAssetPrice",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "calculateProfitLoss",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_positionSize",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_isLong",
        type: "bool",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_additionalSize",
        type: "uint256",
      },
    ],
    name: "increasePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "positions",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "positionSize",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isLong",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_reduceSize",
        type: "uint256",
      },
    ],
    name: "reducePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setSyntheticAssetPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "syntheticAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001af638038062001af683398181016040528101906200003791906200023e565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000281565b60405180910390fd5b620000be816200011060201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103e8600281905550506200029e565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200020682620001d9565b9050919050565b6200021881620001f9565b81146200022457600080fd5b50565b60008151905062000238816200020d565b92915050565b600060208284031215620002575762000256620001d4565b5b6000620002678482850162000227565b91505092915050565b6200027b81620001f9565b82525050565b600060208201905062000298600083018462000270565b92915050565b61184880620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063715018a611610071578063715018a6146101675780638da5cb5b14610171578063ab76eb411461018f578063b2016bd4146101ab578063e807fc6b146101c9578063f2fde38b146101f9576100b4565b806320519262146100b9578063299afd38146100d75780633ccfd60b146100f357806343a0d066146100fd5780634c718d061461011957806355f5751014610135575b600080fd5b6100c1610215565b6040516100ce9190610ef3565b60405180910390f35b6100f160048036038101906100ec9190610f3f565b61021b565b005b6100fb610264565b005b61011760048036038101906101129190610fa4565b610545565b005b610133600480360381019061012e9190610f3f565b6107fb565b005b61014f600480360381019061014a9190611055565b61096d565b60405161015e93929190611091565b60405180910390f35b61016f6109a4565b005b6101796109b8565b60405161018691906110d7565b60405180910390f35b6101a960048036038101906101a49190610f3f565b6109e1565b005b6101b3610b1c565b6040516101c09190611151565b60405180910390f35b6101e360048036038101906101de9190611055565b610b42565b6040516101f09190611185565b60405180910390f35b610213600480360381019061020e9190611055565b610d01565b005b60025481565b610223610d87565b806002819055507f51db3ada89a88852a55c9b440ee8cac88f9f3736f4f9bac99feeb22e58ac7f46816040516102599190610ef3565b60405180910390a150565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154116102e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e0906111fd565b60405180910390fd5b60006102f433610b42565b905060008082126103545781600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461034d919061124c565b90506103ae565b8161035e90611280565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546103ab91906112c8565b90505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161040b9291906112fc565b6020604051808303816000875af115801561042a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044e919061133a565b61048d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610484906113d9565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008082016000905560018201600090556002820160006101000a81549060ff021916905550503373ffffffffffffffffffffffffffffffffffffffff167f8b29b144dc0936e94efbba4674d90276e07927dcf362d1f1c03d7cd415322f7c836040516105399190611185565b60405180910390a25050565b60008311610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057f90611445565b60405180910390fd5b600082116105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c2906114d7565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161062a939291906114f7565b6020604051808303816000875af1158015610649573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066d919061133a565b6106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a39061157a565b60405180910390fd5b82600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546106fe919061124c565b9250508190555081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff167f782d77f0370514c21f2fd3237596b579a629b18a3d895744fc6d25abec14614183836040516107ee92919061159a565b60405180910390a2505050565b6000811161083e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083590611635565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156108c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ba906116a1565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610915919061124c565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2902410e1621cf73e359725c6ca7a7533f01412ed9e08bcf9bac01ac208c8b64826040516109629190610ef3565b60405180910390a250565b60036020528060005260406000206000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b6109ac610d87565b6109b66000610e0e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600081118015610a335750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101548111155b610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a699061170d565b60405180910390fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610ac491906112c8565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd5f62a4e9c678033b9d8da1b392f3c8116eef53b1f68b8a4fc01f9ccc04bfd4c82604051610b119190610ef3565b60405180910390a250565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1615610c4b57600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546103e8600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600254610c30919061172d565b610c3a919061179e565b610c4491906117cf565b9050610cf8565b6103e8600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600254610c9e919061172d565b610ca8919061179e565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610cf591906117cf565b90505b80915050919050565b610d09610d87565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d7b5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d7291906110d7565b60405180910390fd5b610d8481610e0e565b50565b610d8f610ed2565b73ffffffffffffffffffffffffffffffffffffffff16610dad6109b8565b73ffffffffffffffffffffffffffffffffffffffff1614610e0c57610dd0610ed2565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e0391906110d7565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610eed81610eda565b82525050565b6000602082019050610f086000830184610ee4565b92915050565b600080fd5b610f1c81610eda565b8114610f2757600080fd5b50565b600081359050610f3981610f13565b92915050565b600060208284031215610f5557610f54610f0e565b5b6000610f6384828501610f2a565b91505092915050565b60008115159050919050565b610f8181610f6c565b8114610f8c57600080fd5b50565b600081359050610f9e81610f78565b92915050565b600080600060608486031215610fbd57610fbc610f0e565b5b6000610fcb86828701610f2a565b9350506020610fdc86828701610f2a565b9250506040610fed86828701610f8f565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061102282610ff7565b9050919050565b61103281611017565b811461103d57600080fd5b50565b60008135905061104f81611029565b92915050565b60006020828403121561106b5761106a610f0e565b5b600061107984828501611040565b91505092915050565b61108b81610f6c565b82525050565b60006060820190506110a66000830186610ee4565b6110b36020830185610ee4565b6110c06040830184611082565b949350505050565b6110d181611017565b82525050565b60006020820190506110ec60008301846110c8565b92915050565b6000819050919050565b600061111761111261110d84610ff7565b6110f2565b610ff7565b9050919050565b6000611129826110fc565b9050919050565b600061113b8261111e565b9050919050565b61114b81611130565b82525050565b60006020820190506111666000830184611142565b92915050565b6000819050919050565b61117f8161116c565b82525050565b600060208201905061119a6000830184611176565b92915050565b600082825260208201905092915050565b7f4e6f206f70656e656420706f736974696f6e0000000000000000000000000000600082015250565b60006111e76012836111a0565b91506111f2826111b1565b602082019050919050565b60006020820190508181036000830152611216816111da565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125782610eda565b915061126283610eda565b925082820190508082111561127a5761127961121d565b5b92915050565b600061128b8261116c565b91507f800000000000000000000000000000000000000000000000000000000000000082036112bd576112bc61121d565b5b816000039050919050565b60006112d382610eda565b91506112de83610eda565b92508282039050818111156112f6576112f561121d565b5b92915050565b600060408201905061131160008301856110c8565b61131e6020830184610ee4565b9392505050565b60008151905061133481610f78565b92915050565b6000602082840312156113505761134f610f0e565b5b600061135e84828501611325565b91505092915050565b7f4661696c656420746f207472616e7366657220636f6c6c61746572616c20616e60008201527f642070726f666974000000000000000000000000000000000000000000000000602082015250565b60006113c36028836111a0565b91506113ce82611367565b604082019050919050565b600060208201905081810360008301526113f2816113b6565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e2030000000600082015250565b600061142f601d836111a0565b915061143a826113f9565b602082019050919050565b6000602082019050818103600083015261145e81611422565b9050919050565b7f506f736974696f6e2073697a65206d757374206265206772656174657220746860008201527f616e203000000000000000000000000000000000000000000000000000000000602082015250565b60006114c16024836111a0565b91506114cc82611465565b604082019050919050565b600060208201905081810360008301526114f0816114b4565b9050919050565b600060608201905061150c60008301866110c8565b61151960208301856110c8565b6115266040830184610ee4565b949350505050565b7f4661696c656420746f207472616e7366657220636f6c6c61746572616c000000600082015250565b6000611564601d836111a0565b915061156f8261152e565b602082019050919050565b6000602082019050818103600083015261159381611557565b9050919050565b60006040820190506115af6000830185610ee4565b6115bc6020830184611082565b9392505050565b7f4164646974696f6e616c2073697a65206d75737420626520677265617465722060008201527f7468616e20300000000000000000000000000000000000000000000000000000602082015250565b600061161f6026836111a0565b915061162a826115c3565b604082019050919050565b6000602082019050818103600083015261164e81611612565b9050919050565b7f496e73756666696369656e7420636f6c6c61746572616c000000000000000000600082015250565b600061168b6017836111a0565b915061169682611655565b602082019050919050565b600060208201905081810360008301526116ba8161167e565b9050919050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b60006116f7600e836111a0565b9150611702826116c1565b602082019050919050565b60006020820190508181036000830152611726816116ea565b9050919050565b600061173882610eda565b915061174383610eda565b925082820261175181610eda565b915082820484148315176117685761176761121d565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006117a982610eda565b91506117b483610eda565b9250826117c4576117c361176f565b5b828204905092915050565b60006117da8261116c565b91506117e58361116c565b925082820390508181126000841216828213600085121516171561180c5761180b61121d565b5b9291505056fea26469706673582212207cc11d1944711374582102a3f69b3bdbe281b6e11825b53c3ad3b3eae666e3d564736f6c63430008180033";

type SyntheticAssetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SyntheticAssetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SyntheticAsset__factory extends ContractFactory {
  constructor(...args: SyntheticAssetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _collateralToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_collateralToken, overrides || {});
  }
  override deploy(
    _collateralToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_collateralToken, overrides || {}) as Promise<
      SyntheticAsset & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SyntheticAsset__factory {
    return super.connect(runner) as SyntheticAsset__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SyntheticAssetInterface {
    return new Interface(_abi) as SyntheticAssetInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SyntheticAsset {
    return new Contract(address, _abi, runner) as unknown as SyntheticAsset;
  }
}
